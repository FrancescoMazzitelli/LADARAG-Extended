openapi: 3.0.2
info:
  title: Bar API
  version: 1.0
  description: |-
    Bar API for managing bar areas and services. Compatible with the Reservation API, this service allows interaction with reservation references.
    Supports creation, lookup, update, and deletion of bar sections or entries that can be reserved via the Reservation system.
  contact:
    name: Francesco Cosimo Mazzitelli

servers:
  - url: http://localhost:8585/rest/Bar+API/1.0
    description: Mock server generated by Microcks

components:
  schemas:
    ResponseStatus:
      type: object
      properties:
        status:
          type: string
        httpCode:
          type: integer
        message:
          type: string
      required:
        - status
        - httpCode
        - message

    Bar:
      allOf:
        - $ref: '#/components/schemas/NewBar'
        - properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the bar section
          required:
            - id

    NewBar:
      type: object
      properties:
        name:
          type: string
          description: Name of the bar area
        available:
          type: boolean
          description: Is the area currently available
        reserved:
          type: boolean
          description: Is the area already reserved
        vip:
          type: boolean
          description: VIP-only access?
        price:
          type: number
          format: float
          description: Cost for reservation or access
      required:
        - name
        - available
        - reserved
        - vip
        - price

paths:
  /health:
    get:
      description: Health check
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
              examples:
                healthy:
                  value: {}

  /bar:
    get:
      description: List all bar areas
      responses:
        "200":
          description: List of all bar areas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bar'
              examples:
                example_list:
                  value:
                    - id: 1
                      name: Sky Lounge
                      available: true
                      reserved: false
                      vip: true
                      price: 45.0
                    - id: 2
                      name: Main Bar
                      available: false
                      reserved: true
                      vip: false
                      price: 25.0

    post:
      description: Create a new bar area
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBar'
            examples:
              new_area:
                value:
                  name: Pool Bar
                  available: true
                  reserved: false
                  vip: false
                  price: 30.0
      responses:
        "201":
          description: Bar area created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bar'
              examples:
                created:
                  value:
                    id: 3
                    name: Pool Bar
                    available: true
                    reserved: false
                    vip: false
                    price: 30.0

  /bar/{id}:
    get:
      description: Get a bar area by its ID (used as referenceId in Reservation)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          examples:
            bar_1:
              value: 1
      responses:
        "200":
          description: Bar area details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bar'
              examples:
                bar_1:
                  value:
                    id: 1
                    name: Sky Lounge
                    available: true
                    reserved: false
                    vip: true
                    price: 45.0
        "404":
          description: Bar area not found

    put:
      description: Update a bar area by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          examples:
            updated:
              value: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBar'
            examples:
              update:
                value:
                  name: Sky Lounge
                  available: false
                  reserved: true
                  vip: true
                  price: 50.0
      responses:
        "200":
          description: Bar area updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bar'
              examples:
                updated:
                  value:
                    id: 1
                    name: Sky Lounge
                    available: false
                    reserved: true
                    vip: true
                    price: 50.0
        "404":
          description: Bar area not found

    delete:
      description: Delete a bar area by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          examples:
            deleted:
              value: 1
      responses:
        "204":
          description: Deleted successfully
          content:
            text/plain:
              examples:
                deleted:
                  value: "Bar area deleted"
            
        "404":
          description: Bar area not found

  /register:
    post:
      description: Register this service to discovery system
      responses:
        "200":
          description: Registration success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseStatus'
              examples:
                ok:
                  value:
                    status: "success"
                    httpCode: 200
                    message: "Service registered"
        "500":
          description: Registration failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseStatus'
              examples:
                fail:
                  value:
                    status: "error"
                    httpCode: 500
                    message: "Unable to register to Consul"
