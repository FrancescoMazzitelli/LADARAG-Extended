openapi: 3.0.2
info:
  title: Smart Lighting API
  version: 1.0
  description: |-
    Smart Lighting API for managing smart street lights in the city. Compatible with the Smart Infrastructure platform, this service allows interaction with light pole references.
    Supports creation, lookup, update, and deletion of lighting units, including their availability and energy consumption data.
  contact:
    name: Smart City Development Team

servers:
  - url: http://localhost:8585/rest/Smart+Lighting+API/1.0
    description: Mock server generated by Microcks

components:
  schemas:
    ResponseStatus:
      type: object
      properties:
        status:
          type: string
        httpCode:
          type: integer
        message:
          type: string
      required:
        - status
        - httpCode
        - message

    Light:
      allOf:
        - $ref: '#/components/schemas/NewLight'
        - properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the light pole
          required:
            - id

    NewLight:
      type: object
      properties:
        location:
          type: string
          description: Location of the light pole
        status:
          type: string
          enum: [on, off, malfunctioning]
          description: Operational status of the light
        brightness:
          type: integer
          description: Brightness level (0â€“100)
        energyConsumption:
          type: number
          format: float
          description: Energy usage in kWh
        smartEnabled:
          type: boolean
          description: Whether smart automation is enabled
      required:
        - location
        - status
        - brightness
        - energyConsumption
        - smartEnabled

paths:
  /health:
    get:
      description: Health check
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
              examples:
                healthy:
                  value: {}

  /light:
    get:
      description: List all smart lights
      responses:
        "200":
          description: List of all smart lights
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Light'
              examples:
                example_list:
                  value:
                    - id: 101
                      location: "Main Street - Pole 12"
                      status: "on"
                      brightness: 80
                      energyConsumption: 1.25
                      smartEnabled: true
                    - id: 102
                      location: "Broadway Ave - Pole 5"
                      status: "off"
                      brightness: 0
                      energyConsumption: 0.0
                      smartEnabled: false

    post:
      description: Create a new smart light entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewLight'
            examples:
              new_light:
                value:
                  location: "Liberty Blvd - Pole 7"
                  status: "on"
                  brightness: 90
                  energyConsumption: 1.35
                  smartEnabled: true
      responses:
        "201":
          description: Smart light created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Light'
              examples:
                created:
                  value:
                    id: 103
                    location: "Liberty Blvd - Pole 7"
                    status: "on"
                    brightness: 90
                    energyConsumption: 1.35
                    smartEnabled: true

  /light/{id}:
    get:
      description: Get a smart light by its ID (used as reference in Infrastructure system)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          examples:
            light_101:
              value: 101
      responses:
        "200":
          description: Smart light details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Light'
              examples:
                light_101:
                  value:
                    id: 101
                    location: "Main Street - Pole 12"
                    status: "on"
                    brightness: 80
                    energyConsumption: 1.25
                    smartEnabled: true
        "404":
          description: Smart light not found

    put:
      description: Update a smart light by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          examples:
            updated:
              value: 101
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewLight'
            examples:
              update:
                value:
                  location: "Main Street - Pole 12"
                  status: "off"
                  brightness: 0
                  energyConsumption: 0.0
                  smartEnabled: true
      responses:
        "200":
          description: Smart light updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Light'
              examples:
                updated:
                  value:
                    id: 101
                    location: "Main Street - Pole 12"
                    status: "off"
                    brightness: 0
                    energyConsumption: 0.0
                    smartEnabled: true
        "404":
          description: Smart light not found

    delete:
      description: Delete a smart light by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          examples:
            deleted:
              value: 101
      responses:
        "204":
          description: Deleted successfully
          content:
            text/plain:
              examples:
                deleted:
                  value: "Smart light deleted"
        "404":
          description: Smart light not found

  /register:
    post:
      description: Register this service to the discovery system
      responses:
        "200":
          description: Registration success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseStatus'
              examples:
                ok:
                  value:
                    status: "success"
                    httpCode: 200
                    message: "Service registered"
        "500":
          description: Registration failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseStatus'
              examples:
                fail:
                  value:
                    status: "error"
                    httpCode: 500
                    message: "Unable to register to Consul"
