openapi: 3.0.2
info:
  title: Smart Buildings API
  version: 1.0
  description: |-
    Smart Buildings API for managing building data and facilities in the city. Compatible with the City Infrastructure System, this service allows interaction with building references.
    Supports creation, lookup, update, and deletion of building entries, including occupancy and energy usage data.
  contact:
    name: Smart City Development Team

servers:
  - url: http://localhost:8585/rest/Smart+Buildings+API/1.0
    description: Mock server generated by Microcks

components:
  schemas:
    ResponseStatus:
      type: object
      properties:
        status:
          type: string
        httpCode:
          type: integer
        message:
          type: string
      required:
        - status
        - httpCode
        - message

    Building:
      allOf:
        - $ref: '#/components/schemas/NewBuilding'
        - properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the building
          required:
            - id

    NewBuilding:
      type: object
      properties:
        name:
          type: string
          description: Name of the building
        address:
          type: string
          description: Full postal address of the building
        occupancy:
          type: integer
          description: Current number of occupants
        energyUsage:
          type: number
          format: float
          description: Current energy consumption in kWh
        status:
          type: string
          enum: [operational, maintenance, closed]
          description: Operational status of the building
      required:
        - name
        - address
        - occupancy
        - energyUsage
        - status

paths:
  /health:
    get:
      description: Health check
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
              examples:
                healthy:
                  value: {}

  /building:
    get:
      description: List all smart buildings
      responses:
        "200":
          description: List of all buildings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Building'
              examples:
                example_list:
                  value:
                    - id: 1
                      name: "City Hall"
                      address: "123 Main St, Cityville"
                      occupancy: 150
                      energyUsage: 1200.5
                      status: operational
                    - id: 2
                      name: "Central Library"
                      address: "456 Library Ln, Cityville"
                      occupancy: 75
                      energyUsage: 800.0
                      status: maintenance

    post:
      description: Create a new building entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBuilding'
            examples:
              new_building:
                value:
                  name: "Community Center"
                  address: "789 Community Rd, Cityville"
                  occupancy: 30
                  energyUsage: 500.0
                  status: operational
      responses:
        "201":
          description: Building created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Building'
              examples:
                created:
                  value:
                    id: 3
                    name: "Community Center"
                    address: "789 Community Rd, Cityville"
                    occupancy: 30
                    energyUsage: 500.0
                    status: operational

  /building/{id}:
    get:
      description: Get a building by its ID (used as reference in Infrastructure System)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          examples:
            building_1:
              value: 1
      responses:
        "200":
          description: Building details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Building'
              examples:
                building_1:
                  value:
                    id: 1
                    name: "City Hall"
                    address: "123 Main St, Cityville"
                    occupancy: 150
                    energyUsage: 1200.5
                    status: operational
        "404":
          description: Building not found

    put:
      description: Update a building by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          examples:
            updated:
              value: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBuilding'
            examples:
              update:
                value:
                  name: "City Hall"
                  address: "123 Main St, Cityville"
                  occupancy: 160
                  energyUsage: 1250.0
                  status: operational
      responses:
        "200":
          description: Building updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Building'
              examples:
                updated:
                  value:
                    id: 1
                    name: "City Hall"
                    address: "123 Main St, Cityville"
                    occupancy: 160
                    energyUsage: 1250.0
                    status: operational
        "404":
          description: Building not found

    delete:
      description: Delete a building by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          examples:
            deleted:
              value: 1
      responses:
        "204":
          description: Deleted successfully
          content:
            text/plain:
              examples:
                deleted:
                  value: "Building deleted"
        "404":
          description: Building not found

  /register:
    post:
      description: Register this service to the discovery system
      responses:
        "200":
          description: Registration success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseStatus'
              examples:
                ok:
                  value:
                    status: "success"
                    httpCode: 200
                    message: "Service registered"
        "500":
          description: Registration failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseStatus'
              examples:
                fail:
                  value:
                    status: "error"
                    httpCode: 500
                    message: "Unable to register to Consul"
