openapi: 3.0.2
info:
  title: Smart Bins API
  version: 1.0
  description: |-
    Smart Bins API for managing connected waste bins in urban areas. Compatible with the Smart Waste Management system, this service allows interaction with bin references.
    Supports creation, lookup, update, and deletion of waste bins, as well as real-time monitoring of fill levels and bin status.
  contact:
    name: Smart City Development Team

servers:
  - url: http://localhost:8585/rest/Smart+Bins+API/1.0
    description: Mock server generated by Microcks

components:
  schemas:
    ResponseStatus:
      type: object
      properties:
        status:
          type: string
        httpCode:
          type: integer
        message:
          type: string
      required:
        - status
        - httpCode
        - message

    Bin:
      allOf:
        - $ref: '#/components/schemas/NewBin'
        - properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the waste bin
          required:
            - id

    NewBin:
      type: object
      properties:
        location:
          type: string
          description: Location of the bin
        fillLevel:
          type: integer
          description: Percentage full (0â€“100)
        lastEmptied:
          type: string
          format: date-time
          description: Timestamp of last emptying
        binType:
          type: string
          enum: [general, recyclable, organic, glass, electronic]
          description: Type of waste the bin is intended for
        status:
          type: string
          enum: [normal, full, overflowing, maintenance]
          description: Current bin status
      required:
        - location
        - fillLevel
        - lastEmptied
        - binType
        - status

paths:
  /health:
    get:
      description: Health check
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
              examples:
                healthy:
                  value: {}

  /bin:
    get:
      description: List all smart waste bins
      responses:
        "200":
          description: List of all bins
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bin'
              examples:
                example_list:
                  value:
                    - id: 1
                      location: "5th Avenue & Main"
                      fillLevel: 30
                      lastEmptied: "2025-09-24T08:15:30Z"
                      binType: general
                      status: normal
                    - id: 2
                      location: "Central Park Entrance"
                      fillLevel: 95
                      lastEmptied: "2025-09-22T10:00:00Z"
                      binType: recyclable
                      status: full

    post:
      description: Create a new smart bin entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBin'
            examples:
              new_bin:
                value:
                  location: "City Square"
                  fillLevel: 10
                  lastEmptied: "2025-09-25T06:30:00Z"
                  binType: organic
                  status: normal
      responses:
        "201":
          description: Smart bin created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bin'
              examples:
                created:
                  value:
                    id: 3
                    location: "City Square"
                    fillLevel: 10
                    lastEmptied: "2025-09-25T06:30:00Z"
                    binType: organic
                    status: normal

  /bin/{id}:
    get:
      description: Get a bin by its ID (used as reference in Waste Management)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          examples:
            bin_1:
              value: 1
      responses:
        "200":
          description: Bin details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bin'
              examples:
                bin_1:
                  value:
                    id: 1
                    location: "5th Avenue & Main"
                    fillLevel: 30
                    lastEmptied: "2025-09-24T08:15:30Z"
                    binType: general
                    status: normal
        "404":
          description: Bin not found

    put:
      description: Update a bin by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          examples:
            updated:
              value: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBin'
            examples:
              update:
                value:
                  location: "5th Avenue & Main"
                  fillLevel: 100
                  lastEmptied: "2025-09-25T08:00:00Z"
                  binType: general
                  status: overflowing
      responses:
        "200":
          description: Bin updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bin'
              examples:
                updated:
                  value:
                    id: 1
                    location: "5th Avenue & Main"
                    fillLevel: 100
                    lastEmptied: "2025-09-25T08:00:00Z"
                    binType: general
                    status: overflowing
        "404":
          description: Bin not found

    delete:
      description: Delete a bin by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          examples:
            deleted:
              value: 1
      responses:
        "204":
          description: Deleted successfully
          content:
            text/plain:
              examples:
                deleted:
                  value: "Smart bin deleted"
        "404":
          description: Bin not found

  /register:
    post:
      description: Register this service to the discovery system
      responses:
        "200":
          description: Registration success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseStatus'
              examples:
                ok:
                  value:
                    status: "success"
                    httpCode: 200
                    message: "Service registered"
        "500":
          description: Registration failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseStatus'
              examples:
                fail:
                  value:
                    status: "error"
                    httpCode: 500
                    message: "Unable to register to Consul"
