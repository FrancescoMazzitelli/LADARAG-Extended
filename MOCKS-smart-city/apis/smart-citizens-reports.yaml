openapi: 3.0.2
info:
  title: Smart Citizens Reports API
  version: 1.0
  description: |-
    Smart Citizens Reports API for managing reports submitted by citizens regarding city services, infrastructure, and public issues. Compatible with the City Incident Management System, this service allows interaction with citizen report references.
    Supports creation, lookup, update, and deletion of citizen reports including status tracking and categorization.
  contact:
    name: Smart City Development Team

servers:
  - url: http://localhost:8585/rest/Smart+Citizens+Reports+API/1.0
    description: Mock server generated by Microcks

components:
  schemas:
    ResponseStatus:
      type: object
      properties:
        status:
          type: string
        httpCode:
          type: integer
        message:
          type: string
      required:
        - status
        - httpCode
        - message

    CitizenReport:
      allOf:
        - $ref: '#/components/schemas/NewCitizenReport'
        - properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the citizen report
          required:
            - id

    NewCitizenReport:
      type: object
      properties:
        reporterName:
          type: string
          description: Name of the citizen reporting the issue
        location:
          type: string
          description: Location of the issue reported
        category:
          type: string
          description: Category of the report (e.g., sanitation, infrastructure, safety)
        description:
          type: string
          description: Detailed description of the issue
        status:
          type: string
          enum: [open, in_progress, resolved, closed]
          description: Current status of the report
        submittedAt:
          type: string
          format: date-time
          description: Timestamp when the report was submitted
      required:
        - reporterName
        - location
        - category
        - description
        - status
        - submittedAt

paths:
  /health:
    get:
      description: Health check
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
              examples:
                healthy:
                  value: {}

  /citizen-report:
    get:
      description: List all citizen reports
      responses:
        "200":
          description: List of all citizen reports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CitizenReport'
              examples:
                example_list:
                  value:
                    - id: 1
                      reporterName: "John Doe"
                      location: "5th Ave and Main St"
                      category: "sanitation"
                      description: "Overflowing garbage bin causing bad smell"
                      status: "open"
                      submittedAt: "2025-09-24T14:30:00Z"
                    - id: 2
                      reporterName: "Jane Smith"
                      location: "Central Park"
                      category: "infrastructure"
                      description: "Broken street light needs repair"
                      status: "in_progress"
                      submittedAt: "2025-09-23T09:15:00Z"

    post:
      description: Submit a new citizen report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCitizenReport'
            examples:
              new_report:
                value:
                  reporterName: "Alice Johnson"
                  location: "Riverfront Blvd"
                  category: "safety"
                  description: "Damaged guardrail on the pedestrian bridge"
                  status: "open"
                  submittedAt: "2025-09-25T11:00:00Z"
      responses:
        "201":
          description: Citizen report created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CitizenReport'
              examples:
                created:
                  value:
                    id: 3
                    reporterName: "Alice Johnson"
                    location: "Riverfront Blvd"
                    category: "safety"
                    description: "Damaged guardrail on the pedestrian bridge"
                    status: "open"
                    submittedAt: "2025-09-25T11:00:00Z"

  /citizen-report/{id}:
    get:
      description: Get a citizen report by its ID (used as reference in City Incident Management System)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          examples:
            report_1:
              value: 1
      responses:
        "200":
          description: Citizen report details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CitizenReport'
              examples:
                report_1:
                  value:
                    id: 1
                    reporterName: "John Doe"
                    location: "5th Ave and Main St"
                    category: "sanitation"
                    description: "Overflowing garbage bin causing bad smell"
                    status: "open"
                    submittedAt: "2025-09-24T14:30:00Z"
        "404":
          description: Citizen report not found

    put:
      description: Update a citizen report by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          examples:
            updated:
              value: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCitizenReport'
            examples:
              update:
                value:
                  reporterName: "John Doe"
                  location: "5th Ave and Main St"
                  category: "sanitation"
                  description: "Overflowing garbage bin has been emptied"
                  status: "resolved"
                  submittedAt: "2025-09-24T14:30:00Z"
      responses:
        "200":
          description: Citizen report updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CitizenReport'
              examples:
                updated:
                  value:
                    id: 1
                    reporterName: "John Doe"
                    location: "5th Ave and Main St"
                    category: "sanitation"
                    description: "Overflowing garbage bin has been emptied"
                    status: "resolved"
                    submittedAt: "2025-09-24T14:30:00Z"
        "404":
          description: Citizen report not found

    delete:
      description: Delete a citizen report by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          examples:
            deleted:
              value: 1
      responses:
        "204":
          description: Deleted successfully
          content:
            text/plain:
              examples:
                deleted:
                  value: "Citizen report deleted"
        "404":
          description: Citizen report not found

  /register:
    post:
      description: Register this service to the discovery system
      responses:
        "200":
          description: Registration success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseStatus'
              examples:
                ok:
                  value:
                    status: "success"
                    httpCode: 200
                    message: "Service registered"
        "500":
          description: Registration failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseStatus'
              examples:
                fail:
                  value:
                    status: "error"
                    httpCode: 500
                    message: "Unable to register to Consul"
