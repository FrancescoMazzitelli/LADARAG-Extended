openapi: 3.0.2
info:
  title: Smart Public Transport API
  version: 1.0
  description: |-
    Public Transport API for managing smart bus stops and schedules across the city. Compatible with the Urban Mobility System, this service allows interaction with stop references.
    Supports creation, lookup, update, and deletion of bus stop entries, including live schedule and occupancy data.
  contact:
    name: Smart City Development Team

servers:
  - url: http://localhost:8585/rest/Smart+Public+Transport+API/1.0
    description: Mock server generated by Microcks

components:
  schemas:
    ResponseStatus:
      type: object
      properties:
        status:
          type: string
        httpCode:
          type: integer
        message:
          type: string
      required:
        - status
        - httpCode
        - message

    BusStop:
      allOf:
        - $ref: '#/components/schemas/NewBusStop'
        - properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the bus stop
          required:
            - id

    NewBusStop:
      type: object
      properties:
        name:
          type: string
          description: Name of the bus stop
        location:
          type: string
          description: Location description or GPS coordinates
        active:
          type: boolean
          description: Whether the stop is active
        nextArrival:
          type: string
          format: date-time
          description: Estimated arrival time of next bus
        routeId:
          type: string
          description: Bus route identifier
      required:
        - name
        - location
        - active
        - nextArrival
        - routeId

paths:
  /health:
    get:
      description: Health check
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
              examples:
                healthy:
                  value: {}

  /bus:
    get:
      description: List all bus stops
      responses:
        "200":
          description: List of all public transport stops
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusStop'
              examples:
                example_list:
                  value:
                    - id: 1
                      name: "Main Terminal"
                      location: "Downtown Center"
                      active: true
                      nextArrival: "2025-09-25T13:45:00Z"
                      routeId: "A1"
                    - id: 2
                      name: "North Station"
                      location: "North Blvd"
                      active: false
                      nextArrival: "2025-09-25T14:00:00Z"
                      routeId: "B2"

    post:
      description: Create a new bus stop entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBusStop'
            examples:
              new_stop:
                value:
                  name: "East Gate"
                  location: "East Side Avenue"
                  active: true
                  nextArrival: "2025-09-25T13:30:00Z"
                  routeId: "C3"
      responses:
        "201":
          description: Bus stop created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusStop'
              examples:
                created:
                  value:
                    id: 3
                    name: "East Gate"
                    location: "East Side Avenue"
                    active: true
                    nextArrival: "2025-09-25T13:30:00Z"
                    routeId: "C3"

  /bus/{id}:
    get:
      description: Get a bus stop by its ID (used as reference in Mobility System)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          examples:
            stop_1:
              value: 1
      responses:
        "200":
          description: Bus stop details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusStop'
              examples:
                stop_1:
                  value:
                    id: 1
                    name: "Main Terminal"
                    location: "Downtown Center"
                    active: true
                    nextArrival: "2025-09-25T13:45:00Z"
                    routeId: "A1"
        "404":
          description: Bus stop not found

    put:
      description: Update a bus stop by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          examples:
            updated:
              value: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBusStop'
            examples:
              update:
                value:
                  name: "Main Terminal"
                  location: "Downtown Center"
                  active: false
                  nextArrival: "2025-09-25T14:15:00Z"
                  routeId: "A1"
      responses:
        "200":
          description: Bus stop updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusStop'
              examples:
                updated:
                  value:
                    id: 1
                    name: "Main Terminal"
                    location: "Downtown Center"
                    active: false
                    nextArrival: "2025-09-25T14:15:00Z"
                    routeId: "A1"
        "404":
          description: Bus stop not found

    delete:
      description: Delete a bus stop by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          examples:
            deleted:
              value: 1
      responses:
        "204":
          description: Deleted successfully
          content:
            text/plain:
              examples:
                deleted:
                  value: "Bus stop deleted"
        "404":
          description: Bus stop not found

  /register:
    post:
      description: Register this service to the discovery system
      responses:
        "200":
          description: Registration success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseStatus'
              examples:
                ok:
                  value:
                    status: "success"
                    httpCode: 200
                    message: "Service registered"
        "500":
          description: Registration failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseStatus'
              examples:
                fail:
                  value:
                    status: "error"
                    httpCode: 500
                    message: "Unable to register to Consul"
