openapi: 3.0.2
info:
  title: Smart Emergency Services API
  version: 1.0
  description: |-
    Smart Emergency Services API for managing emergency units and resources in the city. Compatible with the City Response System, this service allows interaction with emergency service references.
    Supports creation, lookup, update, and deletion of emergency units including their status and availability.
  contact:
    name: Smart City Development Team

servers:
  - url: http://localhost:8585/rest/Smart+Emergency+Services+API/1.0
    description: Mock server generated by Microcks

components:
  schemas:
    ResponseStatus:
      type: object
      properties:
        status:
          type: string
        httpCode:
          type: integer
        message:
          type: string
      required:
        - status
        - httpCode
        - message

    EmergencyUnit:
      allOf:
        - $ref: '#/components/schemas/NewEmergencyUnit'
        - properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the emergency unit
          required:
            - id

    NewEmergencyUnit:
      type: object
      properties:
        type:
          type: string
          enum: [fire, police, medical, rescue]
          description: Type of emergency service unit
        location:
          type: string
          description: Current location or base of the unit
        available:
          type: boolean
          description: Availability status of the unit
        status:
          type: string
          enum: [idle, responding, maintenance, unavailable]
          description: Operational status of the unit
      required:
        - type
        - location
        - available
        - status

paths:
  /health:
    get:
      description: Health check
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
              examples:
                healthy:
                  value: {}

  /emergency-unit:
    get:
      description: List all emergency units
      responses:
        "200":
          description: List of all emergency units
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmergencyUnit'
              examples:
                example_list:
                  value:
                    - id: 1
                      type: fire
                      location: "Station 12"
                      available: true
                      status: idle
                    - id: 2
                      type: medical
                      location: "Hospital Central"
                      available: false
                      status: responding

    post:
      description: Create a new emergency unit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewEmergencyUnit'
            examples:
              new_unit:
                value:
                  type: police
                  location: "Station 5"
                  available: true
                  status: idle
      responses:
        "201":
          description: Emergency unit created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmergencyUnit'
              examples:
                created:
                  value:
                    id: 3
                    type: police
                    location: "Station 5"
                    available: true
                    status: idle

  /emergency-unit/{id}:
    get:
      description: Get an emergency unit by its ID (used as reference in City Response System)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          examples:
            unit_1:
              value: 1
      responses:
        "200":
          description: Emergency unit details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmergencyUnit'
              examples:
                unit_1:
                  value:
                    id: 1
                    type: fire
                    location: "Station 12"
                    available: true
                    status: idle
        "404":
          description: Emergency unit not found

    put:
      description: Update an emergency unit by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          examples:
            updated:
              value: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewEmergencyUnit'
            examples:
              update:
                value:
                  type: fire
                  location: "Station 12"
                  available: false
                  status: responding
      responses:
        "200":
          description: Emergency unit updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmergencyUnit'
              examples:
                updated:
                  value:
                    id: 1
                    type: fire
                    location: "Station 12"
                    available: false
                    status: responding
        "404":
          description: Emergency unit not found

    delete:
      description: Delete an emergency unit by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          examples:
            deleted:
              value: 1
      responses:
        "204":
          description: Deleted successfully
          content:
            text/plain:
              examples:
                deleted:
                  value: "Emergency unit deleted"
        "404":
          description: Emergency unit not found

  /register:
    post:
      description: Register this service to the discovery system
      responses:
        "200":
          description: Registration success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseStatus'
              examples:
                ok:
                  value:
                    status: "success"
                    httpCode: 200
                    message: "Service registered"
        "500":
          description: Registration failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseStatus'
              examples:
                fail:
                  value:
                    status: "error"
                    httpCode: 500
                    message: "Unable to register to Consul"
