[
  {
    "question_index":1,
    "question":"I want to retrieve information about all trash bins in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Bins+API\/1.0\/bin",
          "input":"",
          "operation":"GET",
          "service_id":"smart-bins-mock",
          "task_name":"retrieve trash bins"
        }
      ]
    }
  },
  {
    "question_index":2,
    "question":"I want to register a new trash bin in the system with id: 3, location: 'City Square', fillLevel: 10, lastEmptied: '2025-09-25T06:30:00Z', binType: 'organic', status: 'normal'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Bins+API\/1.0\/bin",
          "input":{
            "binType":"organic",
            "fillLevel":10,
            "id":3,
            "lastEmptied":"2025-09-25T06:30:00Z",
            "location":"City Square",
            "status":"normal"
          },
          "operation":"POST",
          "service_id":"smart-bins-mock",
          "task_name":"register trash bin"
        }
      ]
    }
  },
  {
    "question_index":3,
    "question":"I want to delete the trash bin with id: 1 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Bins+API\/1.0\/bin\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-bins-mock",
          "task_name":"delete trash bin"
        }
      ]
    }
  },
  {
    "question_index":4,
    "question":"I want to retrieve information about the trash bin with id: 1",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Bins+API\/1.0\/bin\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-bins-mock",
          "task_name":"retrieve trash bin info"
        }
      ]
    }
  },
  {
    "question_index":5,
    "question":"I want to update the trash bin with id: 1 to have fillLevel: 100 and status: 'overflowing'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Bins+API\/1.0\/bin\/1",
          "input":{
            "fillLevel":100,
            "status":"overflowing"
          },
          "operation":"PUT",
          "service_id":"smart-bins-mock",
          "task_name":"update trash bin"
        }
      ]
    }
  },
  {
    "question_index":6,
    "question":"I want to retrieve information about all the buildings registered in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Buildings+API\/1.0\/building",
          "input":"",
          "operation":"GET",
          "service_id":"smart-buildings-mock",
          "task_name":"retrieve building list"
        }
      ]
    }
  },
  {
    "question_index":7,
    "question":"I want to register a new building in the system with id: 3, name: 'Community Center', address: '789 Community Rd, Cityville', occupancy: 30, energyUsage: 500, status: 'operational'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Buildings+API\/1.0\/building",
          "input":{
            "address":"789 Community Rd, Cityville",
            "energyUsage":500,
            "id":3,
            "name":"Community Center",
            "occupancy":30,
            "status":"operational"
          },
          "operation":"POST",
          "service_id":"smart-buildings-mock",
          "task_name":"register new building"
        }
      ]
    }
  },
  {
    "question_index":8,
    "question":"I want to delete the building with id: 1 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Buildings+API\/1.0\/building\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-buildings-mock",
          "task_name":"delete building"
        }
      ]
    }
  },
  {
    "question_index":9,
    "question":"I want to retrieve information about the building with id: 1",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Buildings+API\/1.0\/building\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-buildings-mock",
          "task_name":"retrieve building info"
        }
      ]
    }
  },
  {
    "question_index":10,
    "question":"I want to update the building with id: 1 to have occupancy: 160 and energyUsage: 1250",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Buildings+API\/1.0\/building\/1",
          "input":{
            "energyUsage":1250,
            "occupancy":160
          },
          "operation":"PUT",
          "service_id":"smart-buildings-mock",
          "task_name":"update building"
        }
      ]
    }
  },
  {
    "question_index":11,
    "question":"I want to retrieve information about all EV charging stations in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Charging+Stations+API\/1.0\/charging-station",
          "input":"",
          "operation":"GET",
          "service_id":"smart-charging-mock",
          "task_name":"retrieve EV charging stations"
        }
      ]
    }
  },
  {
    "question_index":12,
    "question":"I want to register a new EV charging station in the system with id: 3, location: '789 Battery Blvd', available: 'true', connectors: 6, chargingSpeed: 'slow', pricePerKWh: 0.2",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Charging+Stations+API\/1.0\/charging-station",
          "input":{
            "available":true,
            "chargingSpeed":"slow",
            "connectors":6,
            "id":3,
            "location":"789 Battery Blvd",
            "pricePerKWh":0.2
          },
          "operation":"POST",
          "service_id":"smart-charging-mock",
          "task_name":"register EV charging station"
        }
      ]
    }
  },
  {
    "question_index":13,
    "question":"I want to delete the EV charging station with id: 1 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Charging+Stations+API\/1.0\/charging-station\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-charging-mock",
          "task_name":"delete EV charging station"
        }
      ]
    }
  },
  {
    "question_index":14,
    "question":"I want to retrieve information about the EV charging station with id: 1",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Charging+Stations+API\/1.0\/charging-station\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-charging-mock",
          "task_name":"retrieve EV charging station info"
        }
      ]
    }
  },
  {
    "question_index":15,
    "question":"I want to update the EV charging station with id: 1 to have available: false",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Charging+Stations+API\/1.0\/charging-station\/1",
          "input":"{\"available\": false}",
          "operation":"PUT",
          "service_id":"smart-charging-mock",
          "task_name":"update charging station"
        }
      ]
    }
  },
  {
    "question_index":16,
    "question":"I want to reitrieve information about all citizen reports in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Citizens+Reports+API\/1.0\/citizen-report",
          "input":"",
          "operation":"GET",
          "service_id":"smart-citizens-reports-mock",
          "task_name":"retrieve citizen reports"
        }
      ]
    }
  },
  {
    "question_index":17,
    "question":"I want to register a new citizen report in the system with id: 3, reporterName: 'Alice Johnson', location: 'Main St and 3rd Ave', category: 'safety', description: 'Large pothole on Main St', status: 'open', submittedAt: '2025-09-25T08:00:00Z'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Citizens+Reports+API\/1.0\/citizen-report",
          "input":{
            "category":"safety",
            "description":"Large pothole on Main St",
            "id":3,
            "location":"Main St and 3rd Ave",
            "reporterName":"Alice Johnson",
            "status":"open",
            "submittedAt":"2025-09-25T08:00:00Z"
          },
          "operation":"POST",
          "service_id":"smart-citizens-reports-mock",
          "task_name":"register citizen report"
        }
      ]
    }
  },
  {
    "question_index":18,
    "question":"I want to delete the citizen report with id: 1 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Citizens+Reports+API\/1.0\/citizen-report\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-citizens-reports-mock",
          "task_name":"delete citizen report"
        }
      ]
    }
  },
  {
    "question_index":19,
    "question":"I want to retrieve information about the citizen report with id: 1",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Citizens+Reports+API\/1.0\/citizen-report\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-citizens-reports-mock",
          "task_name":"retrieve citizen report"
        }
      ]
    }
  },
  {
    "question_index":20,
    "question":"I want to update the citizen report with id: 1 to have status: 'resolved'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Citizens+Reports+API\/1.0\/citizen-report\/1",
          "input":{
            "status":"resolved"
          },
          "operation":"PUT",
          "service_id":"smart-citizens-reports-mock",
          "task_name":"update citizen report"
        }
      ]
    }
  },
  {
    "question_index":21,
    "question":"I want to retrieve information about all emergency units in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Emergency+Services+API\/1.0\/emergency-unit",
          "input":"",
          "operation":"GET",
          "service_id":"smart-emergency-services-mock",
          "task_name":"retrieve emergency units"
        }
      ]
    }
  },
  {
    "question_index":22,
    "question":"I want to register a new emergency unit in the system with id: 3, type: 'police', location: 'Station 5', available: true, status: 'idle'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Emergency+Services+API\/1.0\/emergency-unit",
          "input":{
            "available":true,
            "id":3,
            "location":"Station 5",
            "status":"idle",
            "type":"police"
          },
          "operation":"POST",
          "service_id":"smart-emergency-services-mock",
          "task_name":"register emergency unit"
        }
      ]
    }
  },
  {
    "question_index":23,
    "question":"I want to delete the emergency unit with id: 1 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Emergency+Services+API\/1.0\/emergency-unit\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-emergency-services-mock",
          "task_name":"delete emergency unit"
        }
      ]
    }
  },
  {
    "question_index":24,
    "question":"I want to retrieve information about the emergency unit with id: 1",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Emergency+Services+API\/1.0\/emergency-unit\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-emergency-services-mock",
          "task_name":"retrieve emergency unit"
        }
      ]
    }
  },
  {
    "question_index":25,
    "question":"I want to update the emergency unit with id: 1 to have available: false and status: 'responding'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Emergency+Services+API\/1.0\/emergency-unit\/1",
          "input":{
            "available":false,
            "status":"responding"
          },
          "operation":"PUT",
          "service_id":"smart-emergency-services-mock",
          "task_name":"update emergency unit"
        }
      ]
    }
  },
  {
    "question_index":26,
    "question":"I want to retrieve information about all lights registered in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Lighting+API\/1.0\/light",
          "input":"",
          "operation":"GET",
          "service_id":"smart-lighting-mock",
          "task_name":"retrieve all lights"
        }
      ]
    }
  },
  {
    "question_index":27,
    "question":"I want to register a new light in the system with id: 103, location: 'Liberty Blvd - Pole 7', status: 'on', brightness: 90, energyConsumption: 1.35, smartEnabled: true",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Lighting+API\/1.0\/light",
          "input":{
            "brightness":90,
            "energyConsumption":1.35,
            "id":103,
            "location":"Liberty Blvd - Pole 7",
            "smartEnabled":true,
            "status":"on"
          },
          "operation":"POST",
          "service_id":"smart-lighting-mock",
          "task_name":"register new light"
        }
      ]
    }
  },
  {
    "question_index":28,
    "question":"I want to delete the light with id: 101 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Lighting+API\/1.0\/light\/101",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-lighting-mock",
          "task_name":"delete light"
        }
      ]
    }
  },
  {
    "question_index":29,
    "question":"I want to retrieve information about the light with id: 101",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Lighting+API\/1.0\/light\/101",
          "input":"",
          "operation":"GET",
          "service_id":"smart-lighting-mock",
          "task_name":"retrieve light info"
        }
      ]
    }
  },
  {
    "question_index":30,
    "question":"I want to update the light with id: 101 to have brightness: 0 and status: 'off'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Lighting+API\/1.0\/light\/101",
          "input":{
            "brightness":0,
            "status":"off"
          },
          "operation":"PUT",
          "service_id":"smart-lighting-mock",
          "task_name":"update light"
        }
      ]
    }
  },
  {
    "question_index":31,
    "question":"I want to retrieve information about all buses in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Public+Transport+API\/1.0\/bus",
          "input":"",
          "operation":"GET",
          "service_id":"smart-public-transport-mock",
          "task_name":"retrieve bus stops"
        }
      ]
    }
  },
  {
    "question_index":32,
    "question":"I want to register a new bus in the system with id: 3, name: 'East Gate', location: 'East Side Avenue', active: true, nextArrival: '2025-09-25T13:30:00Z', routeId: 'C3'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Public+Transport+API\/1.0\/bus",
          "input":{
            "active":true,
            "id":3,
            "location":"East Side Avenue",
            "name":"East Gate",
            "nextArrival":"2025-09-25T13:30:00Z",
            "routeId":"C3"
          },
          "operation":"POST",
          "service_id":"smart-public-transport-mock",
          "task_name":"register new bus"
        }
      ]
    }
  },
  {
    "question_index":33,
    "question":"I want to delete the bus with id: 1 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Public+Transport+API\/1.0\/bus\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-public-transport-mock",
          "task_name":"delete bus stop"
        }
      ]
    }
  },
  {
    "question_index":34,
    "question":"I want to retrieve information about the bus with id: 1",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Public+Transport+API\/1.0\/bus\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-public-transport-mock",
          "task_name":"retrieve bus"
        }
      ]
    }
  },
  {
    "question_index":35,
    "question":"I want to update the bus with id: 1 to have active: false and routeId: 'A1'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Public+Transport+API\/1.0\/bus\/1",
          "input":{
            "active":false,
            "routeId":"A1"
          },
          "operation":"PUT",
          "service_id":"smart-public-transport-mock",
          "task_name":"update bus"
        }
      ]
    }
  },
  {
    "question_index":36,
    "question":"I want to retrieve information about all sensors in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Sensors+API\/1.0\/sensor",
          "input":"",
          "operation":"GET",
          "service_id":"smart-sensors-mock",
          "task_name":"retrieve sensors"
        }
      ]
    }
  },
  {
    "question_index":37,
    "question":"I want to register a new sensor in the system with id: 3, location: 'Riverside Walk', sensorType: 'humidity', lastReading: 56.7, lastUpdated: '2025-09-25T09:00:00Z', status: 'active'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Sensors+API\/1.0\/sensor",
          "input":{
            "id":3,
            "lastReading":56.7,
            "lastUpdated":"2025-09-25T09:00:00Z",
            "location":"Riverside Walk",
            "sensorType":"humidity",
            "status":"active"
          },
          "operation":"POST",
          "service_id":"smart-sensors-mock",
          "task_name":"create sensor"
        }
      ]
    }
  },
  {
    "question_index":38,
    "question":"I want to delete the sensor with id: 1 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Sensors+API\/1.0\/sensor\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-sensors-mock",
          "task_name":"delete sensor"
        }
      ]
    }
  },
  {
    "question_index":39,
    "question":"I want to retrieve information about the sensor with id: 1",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Sensors+API\/1.0\/sensor\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-sensors-mock",
          "task_name":"retrieve sensor information"
        }
      ]
    }
  },
  {
    "question_index":40,
    "question":"I want to update the sensor with id: 1 to have sensorType: 'temperature'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Sensors+API\/1.0\/sensor\/1",
          "input":{
            "sensorType":"temperature"
          },
          "operation":"PUT",
          "service_id":"smart-sensors-mock",
          "task_name":"update sensor"
        }
      ]
    }
  },
  {
    "question_index":41,
    "question":"I want to retrieve information about all traffic-sensors in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Traffic+Monitoring+API\/1.0\/traffic-sensor",
          "input":"",
          "operation":"GET",
          "service_id":"smart-traffic-monitoring-mock",
          "task_name":"retrieve traffic sensors"
        }
      ]
    }
  },
  {
    "question_index":42,
    "question":"I want to register a new traffic-sensor in the system with id: 3, location: 'Elm St & 3rd Ave', active: true, congestionLevel: 'low', lastUpdated: '2025-09-25T10:00:00Z'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Traffic+Monitoring+API\/1.0\/traffic-sensor",
          "input":{
            "active":true,
            "congestionLevel":"low",
            "id":3,
            "lastUpdated":"2025-09-25T10:00:00Z",
            "location":"Elm St & 3rd Ave"
          },
          "operation":"POST",
          "service_id":"smart-traffic-monitoring-mock",
          "task_name":"register new traffic sensor"
        }
      ]
    }
  },
  {
    "question_index":43,
    "question":"I want to delete the traffic-sensor with id: 1 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Traffic+Monitoring+API\/1.0\/traffic-sensor\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-traffic-monitoring-mock",
          "task_name":"delete traffic sensor"
        }
      ]
    }
  },
  {
    "question_index":44,
    "question":"I want to retrieve information about the traffic-sensor with id: 1",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Traffic+Monitoring+API\/1.0\/traffic-sensor\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-traffic-monitoring-mock",
          "task_name":"retrieve traffic sensor"
        }
      ]
    }
  },
  {
    "question_index":45,
    "question":"I want to update the traffic-sensor with id: 1 to have active: 'false'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Traffic+Monitoring+API\/1.0\/traffic-sensor\/1",
          "input":{
            "active":false
          },
          "operation":"PUT",
          "service_id":"smart-traffic-monitoring-mock",
          "task_name":"update traffic sensor"
        }
      ]
    }
  },
  {
    "question_index":46,
    "question":"I want to retrieve information about all trash bins in the system AND retrieve information about the trash bin with id: 1",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Bins+API\/1.0\/bin",
          "input":"",
          "operation":"GET",
          "service_id":"smart-bins-mock",
          "task_name":"retrieve all trash bins"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Bins+API\/1.0\/bin\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-bins-mock",
          "task_name":"retrieve trash bin with id 1"
        }
      ]
    }
  },
  {
    "question_index":47,
    "question":"I want to register a new trash bin in the system with id: 3, location: 'City Square', fillLevel: 10, lastEmptied: '2025-09-25T06:30:00Z', binType: 'organic', status: 'normal' AND delete the trash bin with id: 1 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Bins+API\/1.0\/bin",
          "input":"{\"id\":3, \"location\":\"City Square\", \"fillLevel\":10, \"lastEmptied\":\"2025-09-25T06:30:00Z\", \"binType\":\"organic\", \"status\":\"normal\"}",
          "operation":"POST",
          "service_id":"smart-bins-mock",
          "task_name":"create trash bin"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Bins+API\/1.0\/bin\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-bins-mock",
          "task_name":"delete trash bin"
        }
      ]
    }
  },
  {
    "question_index":48,
    "question":"I want to update the trash bin with id: 1 to have fillLevel: 100 and status: 'overflowing' AND retrieve information about all trash bins in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Bins+API\/1.0\/bin\/1",
          "input":{
            "fillLevel":100,
            "status":"overflowing"
          },
          "operation":"PUT",
          "service_id":"smart-bins-mock",
          "task_name":"update trash bin"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Bins+API\/1.0\/bin",
          "input":"",
          "operation":"GET",
          "service_id":"smart-bins-mock",
          "task_name":"retrieve all trash bins"
        }
      ]
    }
  },
  {
    "question_index":49,
    "question":"I want to retrieve information about the trash bin with id: 1 AND update the trash bin with id: 1 to have fillLevel: 100 and status: 'overflowing'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Bins+API\/1.0\/bin\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-bins-mock",
          "task_name":"retrieve trash bin"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Bins+API\/1.0\/bin\/1",
          "input":"{\"fillLevel\": 100, \"status\": \"overflowing\"}",
          "operation":"PUT",
          "service_id":"smart-bins-mock",
          "task_name":"update trash bin"
        }
      ]
    }
  },
  {
    "question_index":50,
    "question":"I want to delete the trash bin with id: 1 from the system AND retrieve information about all trash bins in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Bins+API\/1.0\/bin\/1",
          "input":"id=1",
          "operation":"DELETE",
          "service_id":"smart-bins-mock",
          "task_name":"delete trash bin"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Bins+API\/1.0\/bin",
          "input":"",
          "operation":"GET",
          "service_id":"smart-bins-mock",
          "task_name":"retrieve trash bins list"
        }
      ]
    }
  },
  {
    "question_index":51,
    "question":"I want to retrieve information about all the buildings registered in the system AND retrieve information about the building with id: 1",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Buildings+API\/1.0\/building",
          "input":"",
          "operation":"GET",
          "service_id":"smart-buildings-mock",
          "task_name":"retrieve all buildings"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Buildings+API\/1.0\/building\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-buildings-mock",
          "task_name":"retrieve building with id 1"
        }
      ]
    }
  },
  {
    "question_index":52,
    "question":"I want to register a new building in the system with id: 3, name: 'Community Center', address: '789 Community Rd, Cityville', occupancy: 30, energyUsage: 500, status: 'operational' AND delete the building with id: 1 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Buildings+API\/1.0\/building",
          "input":"{\"id\":3, \"name\":\"Community Center\", \"address\":\"789 Community Rd, Cityville\", \"occupancy\":30, \"energyUsage\":500, \"status\":\"operational\"}",
          "operation":"POST",
          "service_id":"smart-buildings-mock",
          "task_name":"register new building"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Buildings+API\/1.0\/building\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-buildings-mock",
          "task_name":"delete building with id 1"
        }
      ]
    }
  },
  {
    "question_index":53,
    "question":"I want to update the building with id: 1 to have occupancy: 160 and energyUsage: 1250 AND retrieve information about all the buildings registered in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Buildings+API\/1.0\/building\/1",
          "input":"{\"occupancy\": 160, \"energyUsage\": 1250}",
          "operation":"PUT",
          "service_id":"smart-buildings-mock",
          "task_name":"update building"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Buildings+API\/1.0\/building",
          "input":"",
          "operation":"GET",
          "service_id":"smart-buildings-mock",
          "task_name":"retrieve all buildings"
        }
      ]
    }
  },
  {
    "question_index":54,
    "question":"I want to retrieve information about the building with id: 1 AND update the building with id: 1 to have occupancy: 160 and energyUsage: 1250",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Buildings+API\/1.0\/building\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-buildings-mock",
          "task_name":"retrieve building"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Buildings+API\/1.0\/building\/1",
          "input":{
            "energyUsage":1250,
            "occupancy":160
          },
          "operation":"PUT",
          "service_id":"smart-buildings-mock",
          "task_name":"update building"
        }
      ]
    }
  },
  {
    "question_index":55,
    "question":"I want to delete the building with id: 1 from the system AND retrieve information about all the buildings registered in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Buildings+API\/1.0\/building\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-buildings-mock",
          "task_name":"delete building"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Buildings+API\/1.0\/building",
          "input":"",
          "operation":"GET",
          "service_id":"smart-buildings-mock",
          "task_name":"retrieve buildings"
        }
      ]
    }
  },
  {
    "question_index":56,
    "question":"I want to retrieve information about all EV charging stations in the system AND retrieve information about the EV charging station with id: 1",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Charging+Stations+API\/1.0\/charging-station",
          "input":"",
          "operation":"GET",
          "service_id":"smart-charging-mock",
          "task_name":"list all EV charging stations"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Charging+Stations+API\/1.0\/charging-station\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-charging-mock",
          "task_name":"get EV charging station with id 1"
        }
      ]
    }
  },
  {
    "question_index":57,
    "question":"I want to register a new EV charging station in the system with id: 3, location: '789 Battery Blvd', available: 'true', connectors: 6, chargingSpeed: 'slow', pricePerKWh: 0.2 AND delete the EV charging station with id: 1 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Charging+Stations+API\/1.0\/charging-station",
          "input":"{\"id\":3, \"location\":\"789 Battery Blvd\", \"available\":true, \"connectors\":6, \"chargingSpeed\":\"slow\", \"pricePerKWh\":0.2}",
          "operation":"POST",
          "service_id":"smart-charging-mock",
          "task_name":"create EV charging station"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Charging+Stations+API\/1.0\/charging-station\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-charging-mock",
          "task_name":"delete EV charging station"
        }
      ]
    }
  },
  {
    "question_index":58,
    "question":"I want to update the EV charging station with id: 1 to have available: false AND retrieve information about all EV charging stations in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Charging+Stations+API\/1.0\/charging-station\/1",
          "input":{
            "available":false
          },
          "operation":"PUT",
          "service_id":"smart-charging-mock",
          "task_name":"update EV charging station"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Charging+Stations+API\/1.0\/charging-station",
          "input":"",
          "operation":"GET",
          "service_id":"smart-charging-mock",
          "task_name":"retrieve all EV charging stations"
        }
      ]
    }
  },
  {
    "question_index":59,
    "question":"I want to retrieve information about the EV charging station with id: 1 AND update the EV charging station with id: 1 to have available: false",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Charging+Stations+API\/1.0\/charging-station\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-charging-mock",
          "task_name":"retrieve EV charging station"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Charging+Stations+API\/1.0\/charging-station\/1",
          "input":"{\"available\": false}",
          "operation":"PUT",
          "service_id":"smart-charging-mock",
          "task_name":"update EV charging station availability"
        }
      ]
    }
  },
  {
    "question_index":60,
    "question":"I want to delete the EV charging station with id: 1 from the system AND retrieve information about all EV charging stations in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Charging+Stations+API\/1.0\/charging-station\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-charging-mock",
          "task_name":"delete EV charging station"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Charging+Stations+API\/1.0\/charging-station",
          "input":"",
          "operation":"GET",
          "service_id":"smart-charging-mock",
          "task_name":"retrieve all EV charging stations"
        }
      ]
    }
  },
  {
    "question_index":61,
    "question":"I want to reitrieve information about all citizen reports in the system AND retrieve information about the citizen report with id: 1",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Citizens+Reports+API\/1.0\/citizen-report",
          "input":"",
          "operation":"GET",
          "service_id":"smart-citizens-reports-mock",
          "task_name":"retrieve all citizen reports"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Citizens+Reports+API\/1.0\/citizen-report\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-citizens-reports-mock",
          "task_name":"retrieve citizen report with id 1"
        }
      ]
    }
  },
  {
    "question_index":62,
    "question":"I want to register a new citizen report in the system with id: 3, reporterName: 'Alice Johnson', location: 'Main St and 3rd Ave', category: 'safety', description: 'Large pothole on Main St', status: 'open', submittedAt: '2025-09-25T08:00:00Z' AND delete the citizen report with id: 1 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Citizens+Reports+API\/1.0\/citizen-report",
          "input":"{\"id\":3, \"reporterName\":\"Alice Johnson\", \"location\":\"Main St and 3rd Ave\", \"category\":\"safety\", \"description\":\"Large pothole on Main St\", \"status\":\"open\", \"submittedAt\":\"2025-09-25T08:00:00Z\"}",
          "operation":"POST",
          "service_id":"smart-citizens-reports-mock",
          "task_name":"register citizen report"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Citizens+Reports+API\/1.0\/citizen-report\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-citizens-reports-mock",
          "task_name":"delete citizen report"
        }
      ]
    }
  },
  {
    "question_index":63,
    "question":"I want to update the citizen report with id: 1 to have status: 'resolved' AND reitrieve information about all citizen reports in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Citizens+Reports+API\/1.0\/citizen-report\/1",
          "input":{
            "status":"resolved"
          },
          "operation":"PUT",
          "service_id":"smart-citizens-reports-mock",
          "task_name":"update citizen report"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Citizens+Reports+API\/1.0\/citizen-report",
          "input":"",
          "operation":"GET",
          "service_id":"smart-citizens-reports-mock",
          "task_name":"retrieve all citizen reports"
        }
      ]
    }
  },
  {
    "question_index":64,
    "question":"I want to retrieve information about the citizen report with id: 1 AND update the citizen report with id: 1 to have status: 'resolved'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Citizens+Reports+API\/1.0\/citizen-report\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-citizens-reports-mock",
          "task_name":"retrieve citizen report"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Citizens+Reports+API\/1.0\/citizen-report\/1",
          "input":"{\"status\": \"resolved\"}",
          "operation":"PUT",
          "service_id":"smart-citizens-reports-mock",
          "task_name":"update citizen report status to resolved"
        }
      ]
    }
  },
  {
    "question_index":65,
    "question":"I want to delete the citizen report with id: 1 from the system AND reitrieve information about all citizen reports in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Citizens+Reports+API\/1.0\/citizen-report\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-citizens-reports-mock",
          "task_name":"delete citizen report"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Citizens+Reports+API\/1.0\/citizen-report",
          "input":"",
          "operation":"GET",
          "service_id":"smart-citizens-reports-mock",
          "task_name":"retrieve all citizen reports"
        }
      ]
    }
  },
  {
    "question_index":66,
    "question":"I want to retrieve information about all emergency units in the system AND retrieve information about the emergency unit with id: 1",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Emergency+Services+API\/1.0\/emergency-unit",
          "input":"",
          "operation":"GET",
          "service_id":"smart-emergency-services-mock",
          "task_name":"retrieve all emergency units"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Emergency+Services+API\/1.0\/emergency-unit\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-emergency-services-mock",
          "task_name":"retrieve emergency unit with id 1"
        }
      ]
    }
  },
  {
    "question_index":67,
    "question":"I want to register a new emergency unit in the system with id: 3, type: 'police', location: 'Station 5', available: true, status: 'idle' AND delete the emergency unit with id: 1 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Emergency+Services+API\/1.0\/emergency-unit",
          "input":"{\"id\":3, \"type\":\"police\", \"location\":\"Station 5\", \"available\":true, \"status\":\"idle\"}",
          "operation":"POST",
          "service_id":"smart-emergency-services-mock",
          "task_name":"register emergency unit"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Emergency+Services+API\/1.0\/emergency-unit\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-emergency-services-mock",
          "task_name":"delete emergency unit"
        }
      ]
    }
  },
  {
    "question_index":68,
    "question":"I want to update the emergency unit with id: 1 to have available: false and status: 'responding' AND retrieve information about all emergency units in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Emergency+Services+API\/1.0\/emergency-unit\/1",
          "input":{
            "available":false,
            "status":"responding"
          },
          "operation":"PUT",
          "service_id":"smart-emergency-services-mock",
          "task_name":"update emergency unit"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Emergency+Services+API\/1.0\/emergency-unit",
          "input":"",
          "operation":"GET",
          "service_id":"smart-emergency-services-mock",
          "task_name":"retrieve emergency units"
        }
      ]
    }
  },
  {
    "question_index":69,
    "question":"I want to retrieve information about the emergency unit with id: 1 AND update the emergency unit with id: 1 to have available: false and status: 'responding'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Emergency+Services+API\/1.0\/emergency-unit\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-emergency-services-mock",
          "task_name":"retrieve emergency unit"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Emergency+Services+API\/1.0\/emergency-unit\/1",
          "input":"{\"available\": false, \"status\": \"responding\"}",
          "operation":"PUT",
          "service_id":"smart-emergency-services-mock",
          "task_name":"update emergency unit"
        }
      ]
    }
  },
  {
    "question_index":70,
    "question":"I want to delete the emergency unit with id: 1 from the system AND retrieve information about all emergency units in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Emergency+Services+API\/1.0\/emergency-unit\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-emergency-services-mock",
          "task_name":"delete emergency unit"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Emergency+Services+API\/1.0\/emergency-unit",
          "input":"",
          "operation":"GET",
          "service_id":"smart-emergency-services-mock",
          "task_name":"retrieve emergency units"
        }
      ]
    }
  },
  {
    "question_index":71,
    "question":"I want to retrieve information about all lights registered in the system AND retrieve information about the light with id: 101",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Lighting+API\/1.0\/light",
          "input":"",
          "operation":"GET",
          "service_id":"smart-lighting-mock",
          "task_name":"retrieve all lights"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Lighting+API\/1.0\/light\/101",
          "input":"",
          "operation":"GET",
          "service_id":"smart-lighting-mock",
          "task_name":"retrieve specific light"
        }
      ]
    }
  },
  {
    "question_index":72,
    "question":"I want to register a new light in the system with id: 103, location: 'Liberty Blvd - Pole 7', status: 'on', brightness: 90, energyConsumption: 1.35, smartEnabled: true AND delete the light with id: 101 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Lighting+API\/1.0\/light",
          "input":{
            "brightness":90,
            "energyConsumption":1.35,
            "id":103,
            "location":"Liberty Blvd - Pole 7",
            "smartEnabled":true,
            "status":"on"
          },
          "operation":"POST",
          "service_id":"smart-lighting-mock",
          "task_name":"create_light"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Lighting+API\/1.0\/light\/101",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-lighting-mock",
          "task_name":"delete_light"
        }
      ]
    }
  },
  {
    "question_index":73,
    "question":"I want to update the light with id: 101 to have brightness: 0 and status: 'off' AND retrieve information about all lights registered in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Lighting+API\/1.0\/light\/101",
          "input":{
            "brightness":0,
            "status":"off"
          },
          "operation":"PUT",
          "service_id":"smart-lighting-mock",
          "task_name":"update light"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Lighting+API\/1.0\/light",
          "input":"",
          "operation":"GET",
          "service_id":"smart-lighting-mock",
          "task_name":"retrieve lights"
        }
      ]
    }
  },
  {
    "question_index":74,
    "question":"I want to retrieve information about the light with id: 101 AND update the light with id: 101 to have brightness: 0 and status: 'off'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Lighting+API\/1.0\/light\/101",
          "input":"",
          "operation":"GET",
          "service_id":"smart-lighting-mock",
          "task_name":"retrieve light info"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Lighting+API\/1.0\/light\/101",
          "input":"{\"brightness\": 0, \"status\": \"off\"}",
          "operation":"PUT",
          "service_id":"smart-lighting-mock",
          "task_name":"update light info"
        }
      ]
    }
  },
  {
    "question_index":75,
    "question":"I want to delete the light with id: 101 from the system AND retrieve information about all lights registered in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Lighting+API\/1.0\/light\/101",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-lighting-mock",
          "task_name":"delete light"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Lighting+API\/1.0\/light",
          "input":"",
          "operation":"GET",
          "service_id":"smart-lighting-mock",
          "task_name":"retrieve all lights"
        }
      ]
    }
  },
  {
    "question_index":76,
    "question":"I want to retrieve information about all buses in the system AND retrieve information about the bus with id: 1",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Public+Transport+API\/1.0\/bus",
          "input":"",
          "operation":"GET",
          "service_id":"smart-public-transport-mock",
          "task_name":"retrieve all buses"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Public+Transport+API\/1.0\/bus\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-public-transport-mock",
          "task_name":"retrieve bus with id 1"
        }
      ]
    }
  },
  {
    "question_index":77,
    "question":"I want to register a new bus in the system with id: 3, name: 'East Gate', location: 'East Side Avenue', active: true, nextArrival: '2025-09-25T13:30:00Z', routeId: 'C3' AND delete the bus with id: 1 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Public+Transport+API\/1.0\/bus",
          "input":{
            "active":true,
            "id":3,
            "location":"East Side Avenue",
            "name":"East Gate",
            "nextArrival":"2025-09-25T13:30:00Z",
            "routeId":"C3"
          },
          "operation":"POST",
          "service_id":"smart-public-transport-mock",
          "task_name":"register new bus"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Public+Transport+API\/1.0\/bus\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-public-transport-mock",
          "task_name":"delete bus"
        }
      ]
    }
  },
  {
    "question_index":78,
    "question":"I want to update the bus with id: 1 to have active: false and routeId: 'A1' AND retrieve information about all buses in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Public+Transport+API\/1.0\/bus\/1",
          "input":"{\"active\": false, \"routeId\": \"A1\"}",
          "operation":"PUT",
          "service_id":"smart-public-transport-mock",
          "task_name":"update bus"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Public+Transport+API\/1.0\/bus",
          "input":"",
          "operation":"GET",
          "service_id":"smart-public-transport-mock",
          "task_name":"retrieve buses"
        }
      ]
    }
  },
  {
    "question_index":79,
    "question":"I want to retrieve information about the bus with id: 1 AND update the bus with id: 1 to have active: false and routeId: 'A1'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Public+Transport+API\/1.0\/bus\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-public-transport-mock",
          "task_name":"retrieve bus info"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Public+Transport+API\/1.0\/bus\/1",
          "input":"{\"active\": false, \"routeId\": \"A1\"}",
          "operation":"PUT",
          "service_id":"smart-public-transport-mock",
          "task_name":"update bus info"
        }
      ]
    }
  },
  {
    "question_index":80,
    "question":"I want to delete the bus with id: 1 from the system AND retrieve information about all buses in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Public+Transport+API\/1.0\/bus\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-public-transport-mock",
          "task_name":"delete bus"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Public+Transport+API\/1.0\/bus",
          "input":"",
          "operation":"GET",
          "service_id":"smart-public-transport-mock",
          "task_name":"retrieve all buses"
        }
      ]
    }
  },
  {
    "question_index":81,
    "question":"I want to retrieve information about all sensors in the system AND retrieve information about the sensor with id: 1",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Sensors+API\/1.0\/sensor",
          "input":"",
          "operation":"GET",
          "service_id":"smart-sensors-mock",
          "task_name":"retrieve all sensors"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Sensors+API\/1.0\/sensor\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-sensors-mock",
          "task_name":"retrieve sensor with id 1"
        }
      ]
    }
  },
  {
    "question_index":82,
    "question":"I want to register a new sensor in the system with id: 3, location: 'Riverside Walk', sensorType: 'humidity', lastReading: 56.7, lastUpdated: '2025-09-25T09:00:00Z', status: 'active' AND delete the sensor with id: 1 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Sensors+API\/1.0\/sensor",
          "input":{
            "id":3,
            "lastReading":56.7,
            "lastUpdated":"2025-09-25T09:00:00Z",
            "location":"Riverside Walk",
            "sensorType":"humidity",
            "status":"active"
          },
          "operation":"POST",
          "service_id":"smart-sensors-mock",
          "task_name":"create sensor"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Sensors+API\/1.0\/sensor\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-sensors-mock",
          "task_name":"delete sensor"
        }
      ]
    }
  },
  {
    "question_index":83,
    "question":"I want to update the sensor with id: 1 to have sensorType: 'temperature' AND retrieve information about all sensors in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Sensors+API\/1.0\/sensor\/1",
          "input":{
            "sensorType":"temperature"
          },
          "operation":"PUT",
          "service_id":"smart-sensors-mock",
          "task_name":"update sensor"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Sensors+API\/1.0\/sensor",
          "input":"",
          "operation":"GET",
          "service_id":"smart-sensors-mock",
          "task_name":"retrieve all sensors"
        }
      ]
    }
  },
  {
    "question_index":84,
    "question":"I want to retrieve information about the sensor with id: 1 AND update the sensor with id: 1 to have sensorType: 'temperature'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Sensors+API\/1.0\/sensor\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-sensors-mock",
          "task_name":"retrieve sensor"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Sensors+API\/1.0\/sensor\/1",
          "input":"{\"sensorType\": \"temperature\"}",
          "operation":"PUT",
          "service_id":"smart-sensors-mock",
          "task_name":"update sensor"
        }
      ]
    }
  },
  {
    "question_index":85,
    "question":"I want to delete the sensor with id: 1 from the system AND retrieve information about all sensors in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Sensors+API\/1.0\/sensor\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-sensors-mock",
          "task_name":"delete sensor"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Sensors+API\/1.0\/sensor",
          "input":"",
          "operation":"GET",
          "service_id":"smart-sensors-mock",
          "task_name":"retrieve sensors"
        }
      ]
    }
  },
  {
    "question_index":86,
    "question":"I want to retrieve information about all traffic-sensors in the system AND retrieve information about the traffic-sensor with id: 1",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Traffic+Monitoring+API\/1.0\/traffic-sensor",
          "input":"",
          "operation":"GET",
          "service_id":"smart-traffic-monitoring-mock",
          "task_name":"retrieve all traffic sensors"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Traffic+Monitoring+API\/1.0\/traffic-sensor\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-traffic-monitoring-mock",
          "task_name":"retrieve traffic sensor with id 1"
        }
      ]
    }
  },
  {
    "question_index":87,
    "question":"I want to register a new traffic-sensor in the system with id: 3, location: 'Elm St & 3rd Ave', active: true, congestionLevel: 'low', lastUpdated: '2025-09-25T10:00:00Z' AND delete the traffic-sensor with id: 1 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Traffic+Monitoring+API\/1.0\/traffic-sensor",
          "input":{
            "active":true,
            "congestionLevel":"low",
            "id":3,
            "lastUpdated":"2025-09-25T10:00:00Z",
            "location":"Elm St & 3rd Ave"
          },
          "operation":"POST",
          "service_id":"smart-traffic-monitoring-mock",
          "task_name":"register traffic sensor"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Traffic+Monitoring+API\/1.0\/traffic-sensor\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-traffic-monitoring-mock",
          "task_name":"delete traffic sensor"
        }
      ]
    }
  },
  {
    "question_index":88,
    "question":"I want to update the traffic-sensor with id: 1 to have active: 'false' AND retrieve information about all traffic-sensors in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Traffic+Monitoring+API\/1.0\/traffic-sensor\/1",
          "input":"{\"active\": false}",
          "operation":"PUT",
          "service_id":"smart-traffic-monitoring-mock",
          "task_name":"update traffic sensor"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Traffic+Monitoring+API\/1.0\/traffic-sensor",
          "input":"",
          "operation":"GET",
          "service_id":"smart-traffic-monitoring-mock",
          "task_name":"retrieve all traffic sensors"
        }
      ]
    }
  },
  {
    "question_index":89,
    "question":"I want to retrieve information about the traffic-sensor with id: 1 AND update the traffic-sensor with id: 1 to have active: 'false'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Traffic+Monitoring+API\/1.0\/traffic-sensor\/1",
          "input":"",
          "operation":"GET",
          "service_id":"smart-traffic-monitoring-mock",
          "task_name":"retrieve traffic sensor"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Traffic+Monitoring+API\/1.0\/traffic-sensor\/1",
          "input":"{\"active\": \"false\"}",
          "operation":"PUT",
          "service_id":"smart-traffic-monitoring-mock",
          "task_name":"update traffic sensor"
        }
      ]
    }
  },
  {
    "question_index":90,
    "question":"I want to delete the traffic-sensor with id: 1 from the system AND retrieve information about all traffic-sensors in the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Traffic+Monitoring+API\/1.0\/traffic-sensor\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-traffic-monitoring-mock",
          "task_name":"delete traffic sensor"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Traffic+Monitoring+API\/1.0\/traffic-sensor",
          "input":"",
          "operation":"GET",
          "service_id":"smart-traffic-monitoring-mock",
          "task_name":"retrieve all traffic sensors"
        }
      ]
    }
  },
  {
    "question_index":91,
    "question":"I want to retrieve information about all trash bins in the system AND register a new trash bin in the system with id: 3, location: 'City Square', fillLevel: 10, lastEmptied: '2025-09-25T06:30:00Z', binType: 'organic', status: 'normal' AND delete the trash bin with id: 1 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Bins+API\/1.0\/bin",
          "input":"",
          "operation":"GET",
          "service_id":"smart-bins-mock",
          "task_name":"retrieve trash bins"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Bins+API\/1.0\/bin",
          "input":"{\"id\": 3, \"location\": \"City Square\", \"fillLevel\": 10, \"lastEmptied\": \"2025-09-25T06:30:00Z\", \"binType\": \"organic\", \"status\": \"normal\"}",
          "operation":"POST",
          "service_id":"smart-bins-mock",
          "task_name":"register new trash bin"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Bins+API\/1.0\/bin\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-bins-mock",
          "task_name":"delete trash bin"
        }
      ]
    }
  },
  {
    "question_index":92,
    "question":"I want to retrieve information about all the buildings registered in the system AND register a new building in the system with id: 3, name: 'Community Center', address: '789 Community Rd, Cityville', occupancy: 30, energyUsage: 500, status: 'operational' AND delete the building with id: 1 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Buildings+API\/1.0\/building",
          "input":"",
          "operation":"GET",
          "service_id":"smart-buildings-mock",
          "task_name":"retrieve buildings"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Buildings+API\/1.0\/building",
          "input":{
            "address":"789 Community Rd, Cityville",
            "energyUsage":500,
            "id":3,
            "name":"Community Center",
            "occupancy":30,
            "status":"operational"
          },
          "operation":"POST",
          "service_id":"smart-buildings-mock",
          "task_name":"create building"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Buildings+API\/1.0\/building\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-buildings-mock",
          "task_name":"delete building"
        }
      ]
    }
  },
  {
    "question_index":93,
    "question":"I want to retrieve information about all EV charging stations in the system AND register a new EV charging station in the system with id: 3, location: '789 Battery Blvd', available: 'true', connectors: 6, chargingSpeed: 'slow', pricePerKWh: 0.2 AND update the EV charging station with id: 1 to have available: false",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Charging+Stations+API\/1.0\/charging-station",
          "input":"",
          "operation":"GET",
          "service_id":"smart-charging-mock",
          "task_name":"retrieve EV charging stations"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Charging+Stations+API\/1.0\/charging-station",
          "input":"{\"id\": 3, \"location\": \"789 Battery Blvd\", \"available\": true, \"connectors\": 6, \"chargingSpeed\": \"slow\", \"pricePerKWh\": 0.2}",
          "operation":"POST",
          "service_id":"smart-charging-mock",
          "task_name":"register new EV charging station"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Charging+Stations+API\/1.0\/charging-station\/1",
          "input":"{\"available\": false}",
          "operation":"PUT",
          "service_id":"smart-charging-mock",
          "task_name":"update EV charging station availability"
        }
      ]
    }
  },
  {
    "question_index":94,
    "question":"I want to retrieve information about all citizen reports in the system AND register a new citizen report in the system with id: 3, reporterName: 'Alice Johnson', location: 'Main St and 3rd Ave', category: 'safety', description: 'Large pothole on Main St', status: 'open', submittedAt: '2025-09-25T08:00:00Z' AND update the citizen report with id: 1 to have status: 'resolved'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Citizens+Reports+API\/1.0\/citizen-report",
          "input":"",
          "operation":"GET",
          "service_id":"smart-citizens-reports-mock",
          "task_name":"retrieve citizen reports"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Citizens+Reports+API\/1.0\/citizen-report",
          "input":"{\"id\": 3, \"reporterName\": \"Alice Johnson\", \"location\": \"Main St and 3rd Ave\", \"category\": \"safety\", \"description\": \"Large pothole on Main St\", \"status\": \"open\", \"submittedAt\": \"2025-09-25T08:00:00Z\"}",
          "operation":"POST",
          "service_id":"smart-citizens-reports-mock",
          "task_name":"register new citizen report"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Citizens+Reports+API\/1.0\/citizen-report\/1",
          "input":"{\"status\": \"resolved\"}",
          "operation":"PUT",
          "service_id":"smart-citizens-reports-mock",
          "task_name":"update citizen report with id 1"
        }
      ]
    }
  },
  {
    "question_index":95,
    "question":"I want to retrieve information about all emergency units in the system AND register a new emergency unit in the system with id: 3, type: 'police', location: 'Station 5', available: true, status: 'idle' AND update the emergency unit with id: 1 to have available: false and status: 'responding'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Emergency+Services+API\/1.0\/emergency-unit",
          "input":"",
          "operation":"GET",
          "service_id":"smart-emergency-services-mock",
          "task_name":"retrieve emergency units"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Emergency+Services+API\/1.0\/emergency-unit",
          "input":"{\"id\": 3, \"type\": \"police\", \"location\": \"Station 5\", \"available\": true, \"status\": \"idle\"}",
          "operation":"POST",
          "service_id":"smart-emergency-services-mock",
          "task_name":"register new emergency unit"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Emergency+Services+API\/1.0\/emergency-unit\/1",
          "input":"{\"available\": false, \"status\": \"responding\"}",
          "operation":"PUT",
          "service_id":"smart-emergency-services-mock",
          "task_name":"update emergency unit with id 1"
        }
      ]
    }
  },
  {
    "question_index":96,
    "question":"I want to retrieve information about all lights registered in the system AND register a new light in the system with id: 103, location: 'Liberty Blvd - Pole 7', status: 'on', brightness: 90, energyConsumption: 1.35, smartEnabled: true AND delete the light with id: 101 from the system",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Lighting+API\/1.0\/light",
          "input":"",
          "operation":"GET",
          "service_id":"smart-lighting-mock",
          "task_name":"retrieve all lights"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Lighting+API\/1.0\/light",
          "input":"{\"id\":103, \"location\":\"Liberty Blvd - Pole 7\", \"status\":\"on\", \"brightness\":90, \"energyConsumption\":1.35, \"smartEnabled\":true}",
          "operation":"POST",
          "service_id":"smart-lighting-mock",
          "task_name":"register new light"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Lighting+API\/1.0\/light\/101",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-lighting-mock",
          "task_name":"delete light with id 101"
        }
      ]
    }
  },
  {
    "question_index":97,
    "question":"I want to retrieve information about all buses in the system AND register a new bus in the system with id: 3, name: 'East Gate', location: 'East Side Avenue', active: true, nextArrival: '2025-09-25T13:30:00Z', routeId: 'C3' AND update the bus with id: 1 to have active: false and routeId: 'A1'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Public+Transport+API\/1.0\/bus",
          "input":"",
          "operation":"GET",
          "service_id":"smart-public-transport-mock",
          "task_name":"retrieve buses"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Public+Transport+API\/1.0\/bus",
          "input":"{\"id\":3, \"name\":\"East Gate\", \"location\":\"East Side Avenue\", \"active\":true, \"nextArrival\":\"2025-09-25T13:30:00Z\", \"routeId\":\"C3\"}",
          "operation":"POST",
          "service_id":"smart-public-transport-mock",
          "task_name":"register new bus"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Public+Transport+API\/1.0\/bus\/1",
          "input":"{\"active\":false, \"routeId\":\"A1\"}",
          "operation":"PUT",
          "service_id":"smart-public-transport-mock",
          "task_name":"update bus"
        }
      ]
    }
  },
  {
    "question_index":98,
    "question":"I want to retrieve information about all sensors in the system AND register a new sensor in the system with id: 3, location: 'Riverside Walk', sensorType: 'humidity', lastReading: 56.7, lastUpdated: '2025-09-25T09:00:00Z', status: 'active' AND update the sensor with id: 1 to have sensorType: 'temperature'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Sensors+API\/1.0\/sensor",
          "input":"",
          "operation":"GET",
          "service_id":"smart-sensors-mock",
          "task_name":"retrieve all sensors"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Sensors+API\/1.0\/sensor",
          "input":"{\"id\": 3, \"location\": \"Riverside Walk\", \"sensorType\": \"humidity\", \"lastReading\": 56.7, \"lastUpdated\": \"2025-09-25T09:00:00Z\", \"status\": \"active\"}",
          "operation":"POST",
          "service_id":"smart-sensors-mock",
          "task_name":"register new sensor"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Sensors+API\/1.0\/sensor\/1",
          "input":"{\"sensorType\": \"temperature\"}",
          "operation":"PUT",
          "service_id":"smart-sensors-mock",
          "task_name":"update sensor"
        }
      ]
    }
  },
  {
    "question_index":99,
    "question":"I want to retrieve information about all traffic-sensors in the system AND delete the traffic-sensor with id: 1 from the system AND update the traffic-sensor with id: 1 to have active: 'false'",
    "execution_plan":{
      "tasks":[
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Traffic+Monitoring+API\/1.0\/traffic-sensor",
          "input":"",
          "operation":"GET",
          "service_id":"smart-traffic-monitoring-mock",
          "task_name":"retrieve traffic sensors"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Traffic+Monitoring+API\/1.0\/traffic-sensor\/1",
          "input":"",
          "operation":"DELETE",
          "service_id":"smart-traffic-monitoring-mock",
          "task_name":"delete traffic sensor with id 1"
        },
        {
          "endpoint":"http:\/\/mock-server:8080\/rest\/Smart+Traffic+Monitoring+API\/1.0\/traffic-sensor\/1",
          "input":"{\"active\": false}",
          "operation":"PUT",
          "service_id":"smart-traffic-monitoring-mock",
          "task_name":"update traffic sensor with id 1 active status"
        }
      ]
    }
  }
]