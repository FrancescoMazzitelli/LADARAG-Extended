
[1] Question: I am a trash man and I want to retrieve information about all trash bins in the system
[EXECUTION PLAN]
[1] SUCCESS
[]
====================================================================================================

[2] Question: I am a trash man and I want to register a new trash bin in the system with id: 3, location: 'City Square', fillLevel: 10, lastEmptied: '2025-09-25T06:30:00Z', binType: 'organic', status: 'normal'
[EXECUTION PLAN]
[2] SUCCESS
[]
====================================================================================================

[3] Question: I am a trash man and I want to delete the trash bin with id: 1 from the system
[EXECUTION PLAN]
[3] SUCCESS
[]
====================================================================================================

[4] Question: I am a trash man and I want to retrieve information about the trash bin with id: 1
[EXECUTION PLAN]
[4] SUCCESS
[]
====================================================================================================

[5] Question: I am a trash man and I want to update the trash bin with id: 1 to have fillLevel: 100 and status: 'overflowing'
[EXECUTION PLAN]
[5] SUCCESS
[]
====================================================================================================

[6] Question: I am a municipal property manager and I want to retrieve information about all the buildings registered in the system
[EXECUTION PLAN]
[6] SUCCESS
[]
====================================================================================================
Traceback (most recent call last):
  File "/home/francescp/Desktop/LADARAG-Extended/submitter.py", line 67, in <module>
    response = requests.post("http://localhost:5500/api/control/invoke", json={"input": question})
  File "/home/francescp/miniconda3/lib/python3.13/site-packages/requests/api.py", line 115, in post
    return request("post", url, data=data, json=json, **kwargs)
  File "/home/francescp/miniconda3/lib/python3.13/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/francescp/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/home/francescp/miniconda3/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/home/francescp/miniconda3/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/home/francescp/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 787, in urlopen
    response = self._make_request(
        conn,
    ...<10 lines>...
        **response_kw,
    )
  File "/home/francescp/miniconda3/lib/python3.13/site-packages/urllib3/connectionpool.py", line 534, in _make_request
    response = conn.getresponse()
  File "/home/francescp/miniconda3/lib/python3.13/site-packages/urllib3/connection.py", line 565, in getresponse
    httplib_response = super().getresponse()
  File "/home/francescp/miniconda3/lib/python3.13/http/client.py", line 1430, in getresponse
    response.begin()
    ~~~~~~~~~~~~~~^^
  File "/home/francescp/miniconda3/lib/python3.13/http/client.py", line 331, in begin
    version, status, reason = self._read_status()
                              ~~~~~~~~~~~~~~~~~^^
  File "/home/francescp/miniconda3/lib/python3.13/http/client.py", line 292, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
               ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/francescp/miniconda3/lib/python3.13/socket.py", line 719, in readinto
    return self._sock.recv_into(b)
           ~~~~~~~~~~~~~~~~~~~~^^^
KeyboardInterrupt
